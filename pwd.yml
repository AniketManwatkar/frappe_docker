version: "3"

services:
  # ─── Application server ───────────────────────────────────────────────────
  backend:
    image: frappe/erpnext:v15.72.2
    networks:
      - frappe_network
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      - DB_HOST=$RENDER_PG_HOST
      - DB_PORT=$RENDER_PG_PORT
      - DB_NAME=$RENDER_PG_DATABASE
      - DB_USER=$RENDER_PG_USER
      - DB_PASSWORD=$RENDER_PG_PASSWORD

  # ─── Initial configurator for Frappe site config ───────────────────────────
  configurator:
    image: frappe/erpnext:v15.72.2
    entrypoint: ["bash","-lc"]
    command: |
      bench set-config -g db_host     $DB_HOST
      bench set-config -g db_port     $DB_PORT
      bench set-config -g redis_cache "redis://$REDIS_CACHE_URL"
      bench set-config -g redis_queue "redis://$REDIS_QUEUE_URL"
      bench set-config -g redis_socketio "redis://$REDIS_SOCKETIO_URL"
      bench set-config -gp socketio_port $SOCKETIO_PORT
    networks:
      - frappe_network
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: none

  # ─── Site creation ────────────────────────────────────────────────────────
  create-site:
    image: frappe/erpnext:v15.72.2
    networks:
      - frappe_network
    entrypoint: ["bash","-lc"]
    command: |
      # wait for Postgres
      wait-for-it -t 120 $RENDER_PG_HOST:$RENDER_PG_PORT

      # wait for Redis cache & queue
      wait-for-it -t 120 $REDIS_CACHE_URL
      wait-for-it -t 120 $REDIS_QUEUE_URL

      # bootstrap the new ERPNext site
      bench new-site \
        --db-host $RENDER_PG_HOST \
        --db-port $RENDER_PG_PORT \
        --db-name $RENDER_PG_DATABASE \
        --db-user $RENDER_PG_USER \
        --db-password $RENDER_PG_PASSWORD \
        --admin-password $ADMIN_PASSWORD \
        --install-app erpnext \
        --set-default frontend
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: none

  # ─── Web frontend (NGINX + static assets) ─────────────────────────────────
  frontend:
    image: frappe/erpnext:v15.72.2
    depends_on:
      - websocket
    networks:
      - frappe_network
    command: nginx-entrypoint.sh
    environment:
      - BACKEND=backend:8000
      - FRAPPE_SITE_NAME_HEADER=frontend
      - SOCKETIO=websocket:9000
      - PROXY_READ_TIMEOUT=120
      - CLIENT_MAX_BODY_SIZE=50m
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: on-failure

  # ─── Background workers & scheduler ───────────────────────────────────────
  queue-long:
    image: frappe/erpnext:v15.72.2
    networks:
      - frappe_network
    command: bench worker --queue long,default,short
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

  queue-short:
    image: frappe/erpnext:v15.72.2
    networks:
      - frappe_network
    command: bench worker --queue short,default
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

  scheduler:
    image: frappe/erpnext:v15.72.2
    networks:
      - frappe_network
    command: bench schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

  websocket:
    image: frappe/erpnext:v15.72.2
    networks:
      - frappe_network
    command: node /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    deploy:
      restart_policy:
        condition: on-failure

# ─── Named volumes (persistent storage) ────────────────────────────────────
volumes:
  sites:
  logs:

# ─── Private network for service-to-service communication ──────────────────
networks:
  frappe_network:
    driver: bridge
